{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","clearHandler","setState","addGoodHandler","good","prevState","removeGoodHandler","filter","item","getTitle","copySelectedGood","length","lastItem","pop","join","Card","style","width","Body","Title","this","Subtitle","Button","className","variant","type","onClick","ListGroup","as","map","Item","classNames","active","includes","Math","random","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mSAKMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAe,CACbC,aAAc,I,EAGhBC,aAAe,WACb,EAAKC,SAAS,CACZF,aAAc,M,EAIlBG,eAAiB,SAACC,GAChB,EAAKF,UAAS,SAACG,GAAD,MAAgB,CAC5BL,aAAa,GAAD,mBAAMK,EAAUL,cAAhB,CAA8BI,S,EAI9CE,kBAAoB,SAACF,GACnB,EAAKF,UAAS,SAAAG,GAAS,MAAK,CAC1BL,aAAcK,EAAUL,aAAaO,QAAO,SAAAC,GAAI,OAAIA,IAASJ,U,EAIjEK,SAAW,WACT,IAAMC,EAAgB,YAAO,EAAKX,MAAMC,cAExC,GAAgC,IAA5BU,EAAiBC,OACnB,MAAO,oBAGT,GAAgC,IAA5BD,EAAiBC,OACnB,MAAM,GAAN,OAAUD,EAAV,gBAGF,IAAME,EAAWF,EAAiBG,MAElC,MAAM,GAAN,OAAUH,EAAiBI,KAAK,MAAhC,gBAA6CF,EAA7C,kB,4CAGF,WAAU,IAAD,OACP,OACE,cAACG,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAtB,SACE,eAACF,EAAA,EAAKG,KAAN,WACE,cAACH,EAAA,EAAKI,MAAN,UACGC,KAAKX,aAER,cAACM,EAAA,EAAKM,SAAN,UACGD,KAAKrB,MAAMC,aAAaW,OAAS,GAChC,cAACW,EAAA,EAAD,CACEC,UAAU,cACVC,QAAQ,UACRC,KAAK,SACLC,QAAS,WACP,EAAKzB,gBALT,yBAaJ,cAAC0B,EAAA,EAAD,CAAWC,GAAG,KAAd,SACG/B,EAAgBgC,KAAI,SAAAzB,GAAI,OACvB,eAACuB,EAAA,EAAUG,KAAX,CACEF,GAAG,KAEHL,UAAWQ,IAAW,GAAI,CAAEC,OAAQ,EAAKjC,MAAMC,aAAaiC,SAAS7B,KAHvE,UAKG,EAAKL,MAAMC,aAAaiC,SAAS7B,GAE9B,cAACkB,EAAA,EAAD,CACEE,QAAQ,QACRC,KAAK,SACLC,QAAS,WACP,EAAKpB,kBAAkBF,IAJ3B,oBAWA,cAACkB,EAAA,EAAD,CACEG,KAAK,SACLC,QAAS,WACP,EAAKvB,eAAeC,IAHxB,iBASJ,sBAAMmB,UAAU,OAAhB,SACGnB,MA1BE8B,KAAKC,wB,GAjERC,IAAMC,WAsGTvC,ICzHfwC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2c72b72b.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Card, Button, ListGroup } from 'react-bootstrap';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string[]\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedGood: [],\n  };\n\n  clearHandler = () => {\n    this.setState({\n      selectedGood: [],\n    });\n  };\n\n  addGoodHandler = (good: string) => {\n    this.setState((prevState) => ({\n      selectedGood: [...prevState.selectedGood, good],\n    }));\n  };\n\n  removeGoodHandler = (good: string) => {\n    this.setState(prevState => ({\n      selectedGood: prevState.selectedGood.filter(item => item !== good),\n    }));\n  };\n\n  getTitle = () => {\n    const copySelectedGood = [...this.state.selectedGood];\n\n    if (copySelectedGood.length === 0) {\n      return 'No goods selected';\n    }\n\n    if (copySelectedGood.length === 1) {\n      return `${copySelectedGood} is selected`;\n    }\n\n    const lastItem = copySelectedGood.pop();\n\n    return `${copySelectedGood.join(', ')} and ${lastItem} are selected`;\n  };\n\n  render() {\n    return (\n      <Card style={{ width: '30rem' }}>\n        <Card.Body>\n          <Card.Title>\n            {this.getTitle()}\n          </Card.Title>\n          <Card.Subtitle>\n            {this.state.selectedGood.length > 0 && (\n              <Button\n                className=\"clearButton\"\n                variant=\"warning\"\n                type=\"button\"\n                onClick={() => {\n                  this.clearHandler();\n                }}\n              >\n                Clear All\n              </Button>\n            )}\n          </Card.Subtitle>\n\n          <ListGroup as=\"ul\">\n            {goodsFromServer.map(good => (\n              <ListGroup.Item\n                as=\"li\"\n                key={Math.random()}\n                className={classNames('', { active: this.state.selectedGood.includes(good) })}\n              >\n                {this.state.selectedGood.includes(good)\n                  ? (\n                    <Button\n                      variant=\"light\"\n                      type=\"button\"\n                      onClick={() => {\n                        this.removeGoodHandler(good);\n                      }}\n                    >\n                      Remove\n                    </Button>\n                  )\n                  : (\n                    <Button\n                      type=\"button\"\n                      onClick={() => {\n                        this.addGoodHandler(good);\n                      }}\n                    >\n                      Add\n                    </Button>\n                  )}\n                <span className=\"item\">\n                  {good}\n                </span>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}